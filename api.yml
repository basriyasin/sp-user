# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost:8080
paths:
  /register:
    post:
      summary: Register new user with the following rules:\n \n1. Phone numbers must be at minimum 10 characters and maximum 13 characters. \n2. Phone numbers must start with the Indonesia country code “+62”. \n3. Full name must be at minimum 3 characters and maximum 60 characters. \n4. Passwords must be minimum 6 characters and maximum 64 characters, containing at least 1 capital characters AND 1 number AND 1 special (non alpha-numeric) characters.
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        '200':
          description: Success
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/RegisterResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /authenticate:
    post:
      summary: authenticate user by phone and password
      operationId: authenticate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthenticateRequest"
      responses:
        '200':
          description: Success
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/AuthenticateResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /profile:
    get:
      summary: get current logged in user profile
      operationId: profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Profile"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      summary: update current logged in user profile
      operationId: updateProfile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Profile"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"


securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: >-
      Enter the token with the `Bearer: ` prefix, e.g. "Bearer abcde12345".


components:
  schemas:
    Profile:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: user id
        name:
          type: string
          description: user full name
        phone:
          type: string
          description: the phone number will be uniq for each user
        created_at:
          type: string
          description: time when user was created with format "Y-m-d hh:mm:ss"
        update_at:
          type: string
          description: time when user was update their profile with format "Y-m-d hh:mm:ss"
      required:
        - name
        - phone
    RegisterRequest:
      type: object
      properties:
        phone:
          type: string
          description: 1. Phone numbers must be at minimum 10 characters and maximum 13 characters. \n2. Phone numbers must start with the Indonesia country code “+62”
        name:
          type: string
          description: Full name must be at minimum 3 characters and maximum 60 characters
        password:
          type: string
          description: Passwords must be minimum 6 characters and maximum 64 characters, containing at least 1 capital characters AND 1 number AND 1 special (non alpha-numeric) characters
      required:
        - phone
        - name
        - password
    RegisterResponse:
      $ref: "#/components/schemas/Profile"
    HelloResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    AuthenticateRequest:
      type: object
      properties:
        phone:
          type: string
          description: 1. Phone numbers must be at minimum 10 characters and maximum 13 characters. \n2. Phone numbers must start with the Indonesia country code “+62”
        password:
          type: string
          description: Passwords must be minimum 6 characters and maximum 64 characters, containing at least 1 capital characters AND 1 number AND 1 special (non alpha-numeric) characters
      required:
        - phone
        - password
    AuthenticateResponse:
      allOf:
        - $ref: "#/components/schemas/Profile" 
        - type: object
          properties:
            token:
              type: string
              description: jwt token which will be used as bearer token
          required:
            - token
